G [label='Si non normal: Test de Wilcoxon (un échantillon)']
H [label='Indépendants ou Appariés?']
I [label='Indépendants']
J [label='Appariés']
K [label='Test de normalité chaque groupe']
L [label='Si normal: Test t']
M [label='Si non normal: Test de Mann-Whitney']
N [label='Test de normalité pour différences']
O [label='Si normal: Test t appariés']
P [label='Si non normal: Test Wilcoxon appariés']
Q [label='Indépendants ou Appariés? (3+ groupes)']
R [label='Indépendants']
S [label='Appariés']
T [label='ANOVA ou Kruskal-Wallis']
U [label='Vérifier homogénéité des variances']
V [label='Si variances non homogènes: ANOVA de Welch']
W [label='Test de normalité pour les différences entre périodes']
X [label='Si normal: ANOVA à mesures répétées']
Y [label='Si non normal: Test de Friedman']
A -> {B C D}
B -> E
E -> {F G}
C -> H
H -> {I J}
I -> K
K -> {L M}
J -> N
N -> {O P}
D -> Q
Q -> {R S}
R -> T
T -> U
U -> V
S -> W
W -> {X Y}
}
")
library(DiagrammeR)
grViz("
digraph {
node [fontname = Helvetica, shape = box]
edge [color = black]
A [label='Type de données catégorielles']
B [label='Deux groupes']
C [label='Trois groupes ou plus']
D [label='Indépendants ou Appariés?']
E [label='Indépendants']
F [label='Appariés']
G [label='Test du Chi-deux']
H [label='Test de McNemar']
I [label='Indépendants ou Appariés? (3+ groupes)']
J [label='Indépendants']
K [label='Appariés']
L [label='Petite taille d\'échantillon ou cellules attendues < 5?']
M [label='Oui: Test exact de Fisher']
N [label='Non: Test du Chi-deux']
O [label='Données ordinales?']
P [label='Oui: Test de Friedman']
Q [label='Non: Test Q de Cochran']
A -> {B C}
B -> D
D -> {E F}
E -> G
F -> H
C -> I
I -> {J K}
J -> L
L -> {M N}
K -> O
O -> {P Q}
}
")
library(DiagrammeR)
grViz("
digraph {
node [fontname = Helvetica, shape = box]
edge [color = black]
A [label='Type de données catégorielles']
B [label='Deux groupes']
C [label='Trois groupes ou plus']
D [label='Indépendants ou Appariés?']
E [label='Indépendants']
F [label='Appariés']
G [label='Test du Chi-deux']
H [label='Test de McNemar']
I [label='Indépendants ou Appariés? (3+ groupes)']
J [label='Indépendants']
K [label='Appariés']
L [label='Petite taille d\'échantillon ou cellules attendues < 5?']
M [label='Oui: Test exact de Fisher']
N [label='Non: Test du Chi-deux']
O [label='Données ordinales?']
P [label='Oui: Test de Friedman']
Q [label='Non: Test Q de Cochran']
A -> {B C}
B -> D
D -> {E F}
E -> G
F -> H
C -> I
I -> {J K}
J -> L
L -> {M N}
K -> O
O -> {P Q}
}
")
library(DiagrammeR)
grViz("
digraph {
node [fontname = Helvetica, shape = box]
edge [color = black]
A [label='Type de données catégorielles']
B [label='Deux groupes']
C [label='Trois groupes ou plus']
D [label='Indépendants ou Appariés?']
E [label='Indépendants']
F [label='Appariés']
G [label='Test du Chi-deux']
H [label='Test de McNemar']
I [label='Indépendants ou Appariés? (3+ groupes)']
J [label='Indépendants']
K [label='Appariés']
L [label='Petite taille d\'échantillon ou cellules attendues < 5?']
M [label='Oui: Test exact de Fisher']
N [label='Non: Test du Chi-deux']
O [label='Données ordinales?']
P [label='Oui: Test de Friedman']
Q [label='Non: Test Q de Cochran']
A -> {B C}
B -> D
D -> {E F}
E -> G
F -> H
C -> I
I -> {J K}
J -> L
L -> {M N}
K -> O
O -> {P Q}
}
")
library(DiagrammeR)
grViz("
digraph {
node [fontname = Helvetica, shape = box]
edge [color = black]
A [label='Type de données catégorielles']
B [label='Deux groupes']
C [label='Trois groupes ou plus']
A -> {B C}
}
")
library(DiagrammeR)
grViz("
digraph {
node [fontname = Helvetica, shape = box]
edge [color = black]
A [label='Type de données catégorielles']
B [label='Deux groupes']
C [label='Trois groupes ou plus']
D [label='Indépendants ou Appariés?']
E [label='Indépendants']
F [label='Appariés']
A -> {B C}
B -> D
D -> {E F}
}
")
library(DiagrammeR)
grViz("
digraph {
node [fontname = Helvetica, shape = box]
edge [color = black]
A [label='Type de données catégorielles']
B [label='Deux groupes']
C [label='Trois groupes ou plus']
D [label='Indépendants ou Appariés?']
E [label='Indépendants']
F [label='Appariés']
G [label='Test du Chi-deux']
A -> {B C}
B -> D
D -> {E F}
E -> G
}
")
library(DiagrammeR)
grViz("
digraph {
node [fontname = Helvetica, shape = box]
edge [color = black]
A [label='Type de données catégorielles']
B [label='Deux groupes']
C [label='Trois groupes ou plus']
D [label='Indépendants ou Appariés?']
E [label='Indépendants']
F [label='Appariés']
G [label='Test du Chi-deux']
H [label='Test de McNemar']
I [label='Indépendants ou Appariés? (3+ groupes)']
A -> {B C}
B -> D
D -> {E F}
E -> G
F -> H
C -> I
}
")
library(DiagrammeR)
grViz("
digraph {
node [fontname = Helvetica, shape = box]
edge [color = black]
A [label='Type de données catégorielles']
B [label='Deux groupes']
C [label='Trois groupes ou plus']
D [label='Indépendants ou Appariés?']
E [label='Indépendants']
F [label='Appariés']
G [label='Test du Chi-deux']
H [label='Test de McNemar']
I [label='Indépendants ou Appariés? (3+ groupes)']
J [label='Indépendants']
K [label='Appariés']
A -> {B C}
B -> D
D -> {E F}
E -> G
F -> H
C -> I
I -> {J K}
}
")
library(DiagrammeR)
grViz("
digraph {
node [fontname = Helvetica, shape = box]
edge [color = black]
A [label='Type de données catégorielles']
B [label='Deux groupes']
C [label='Trois groupes ou plus']
D [label='Indépendants ou Appariés?']
E [label='Indépendants']
F [label='Appariés']
G [label='Test du Chi-deux']
H [label='Test de McNemar']
I [label='Indépendants ou Appariés? (3+ groupes)']
J [label='Indépendants']
K [label='Appariés']
L [label='Petite taille d\'échantillon ou cellules attendues < 5?']
A -> {B C}
B -> D
D -> {E F}
E -> G
F -> H
C -> I
I -> {J K}
J -> L
}
")
puissance = 1 - pnorm(1.96, mean = 2.124, sd = 1)
pnorm(1.96, 2.124)
pnorm(1.96, 2.124, sd=1)
pnorm(1.96, mean= 2.124, sd=1)
2.124 - 1.96
pnorm(0.164, sd=1)
pt(0.58)
pt(0.58, df = 58)
pt(0.58, df = 58)
qt(2.571, df = 58)
qt(0.717, df = 58)
pt(2.571, df = 58)
pt(2.571, df = 5)
1 - pt(2.571, df = 5)
1 - pt(2.571, df = 5, lower.tail = FALSE)
pt(2.571, df = 5, lower.tail = FALSE)
mean(c(10,12,11,9,10))
mean(c(100,120,90,110,105))
rollmean(c(50,55,60), k = 3, fill = NA)
zoo::rollmean(c(50,55,60), k = 3, fill = NA)
zoo::rollmean(c(50,55,60,65,70,75, 80), k = 3, fill = NA)
zoo::rollmean(c(50,55,60,65,70,75, 80), 3)
zoo::rollmean(c(5,6,5.5,6.5,7), 3)
zoo::rollmean(c(5,6,5.5,6.5,7), 2)
sqrt(2)
2^(1/2)
10/100
10/100/100
120/100
20/100
0.2+1
100/120
100/240
240/100
120/100
160/80
(1.2*1.5*1.1)^1/3
(1.2*1.5*1.1)^(1/3)
1.2*1.5*1.1
(1.98)^(1/3)
exp(mean(c(log(1.2)+log(1.5)+log(1.1)))
)
exp(mean(log(c(1.2,1.5,1.1)))
)
exp(mean(log(c(1.4,1.6,1.3,1.5)))
)
(1.4*1.6*1.3*1.5)^(1/4)
1/mean(c(1/2,1/4,1/4,1/8))
4/(mean(c(1/2,1/4,1/4,1/8))
)
4/(mean(c(1/2,1/4,1/4,1/8)))
4/((1/2,1/4,1/4,1/8)))
4/((1/2,1/4,1/4,1/8))
4/((sum(1/2,1/4,1/4,1/8))
)
4/7/8
4/(7/8)
7/8
(4+2+1)/8
(1/2+1/4+1/4+1/8)
8/16
1/4+1/4
1/2+1/2
1+1/8
4/1.125
16/8
8*8
64/8
64/8
8/8+1/8
(64+8)/64
64+8
72/64
4/(1+1/8)
1/10
1/8
1/15
1/6
1/12
1/6+1/12
(1/6)+(1/12)
1/4
1/2+1/4
1/3*2
1/(3*2)
(1/10+1/8+1/15+1/6+1/12)
4/0.5416667
6*12
18/72
72/9
sqrt(mean(c(300²,280²,270²,260²))
sqrt(mean(c(300²,280²,270²,260²)))
sqrt(mean(c(300^2,280^2,270^2,260^2)))
mean(c(300^2,280^2,270^2,260^2)))
mean(c(300^2,280^2,270^2,260^2))
sqrt(77225)
mean(c(200^2,350^2,300^2,400^2,450^2))
sqrt(mean(c(200^2,350^2,300^2,400^2,450^2)))
(12-10)/3
3*sqrt(1/30+1/30)
2/0.77
2/0.7745967
power.t.test(n = 30, sd = 3, delta = 2)
2*sqrt(30)
2*sqrt(2/30)
2/(2*sqrt(2/30))
2/(3*sqrt(2/30))
(3*sqrt(2/30))
qt(p = 0.05, df = 58, lower.tail = FALSE)
qt(p = 0.025, df = 58, lower.tail = FALSE)
qt(p = 0.025, df = 58, lower.tail = TRUE)
# Charger la bibliothèque ggplot2 pour la visualisation
library(ggplot2)
# Paramètres de l'expérience
mu1 <- 10
mu2 <- 12
s <- 3
n <- 30
alpha <- 0.05
df <- 2 * n - 2
diff <- mu2 - mu1
std_error <- s * sqrt(2 / n)
# Calculs pour les scores t
t_alpha <- qt(1 - alpha / 2, df)
t_effect <- diff / std_error
# Création de la grille de valeurs t pour les graphiques
t_values <- seq(-4, 4, length.out = 400)
# Densités pour les deux distributions
density_null <- dt(t_values, df)
density_effect <- dt(t_values - t_effect, df)
# Création du data frame pour ggplot
data <- data.frame(t_values, density_null, density_effect)
# Graphique avec ggplot
ggplot(data, aes(x = t_values)) +
geom_line(aes(y = density_null), color = "blue") +
geom_line(aes(y = density_effect), color = "red") +
geom_area(aes(y = density_null), fill = "blue", alpha = 0.2, xlim = c(t_alpha, Inf)) +
geom_area(aes(y = density_null), fill = "blue", alpha = 0.2, xlim = c(-Inf, -t_alpha)) +
geom_area(aes(y = density_effect), fill = "red", alpha = 0.2, xlim = c(-t_alpha, t_alpha)) +
geom_vline(xintercept = t_alpha, linetype = "dashed", color = "black") +
geom_vline(xintercept = t_effect, linetype = "dashed", color = "green") +
labs(title = "Distribution t de Student sous H0 et H1",
x = "Valeurs de t", y = "Densité de probabilité") +
theme_minimal()
pt(q = -0.58, df = 58, lower.tail = TRUE)
1-0.2820805
pt(q = 2, df = 58, lower.tail = TRUE)
power.t.test(delta = 2, sd = 3, power = 0.8)
2*17.47
(1.96+0.84/0.67)^2
2*(1.96+0.84/0.67)^2
1.96+0.84
2*(1.96+0.84/(0.67))^2
2*((1.96+0.84)/(0.67))^2
((1.96+0.84)/(0.67))^2
2*17.46491
n_each_group = (2 * 3**2 * (1.96 + 0.84)**2) / (0.67**2)
n_each_group = (2 * 3^2 * (1.96 + 0.84)^2) / (0.67^2)
n_each_group = (2  * (1.96 + 0.84)^2) / (0.67^2)
2*(1.96+0.84)^2/2^2
power.t.test(delta = 4, sd = 2)
power.t.test(delta = 4, sd = 2, power = 0.8)
2*sqrt(2/4)
qt(0.025, 6, lower.tail = FALSE)
2.447-2.823
pt(-0.376, df = 6)
1-0.359
power.t.test(n = 4, delta = 4, sd = 2)
4/.414
4/1.414
pt(-0.381, df = 6)
1-0.358
power.prop.test(n = 150, p1 = 0.70, p2 = 0.85)
sqrt(70*(1-70)/150 + 85*(1-85)/150)
sqrt((70*(1-70))/150 + (85*(1-85))/150)
sqrt(((70*(1-70))/150) + ((85*(1-85))/150))
(70*(1-70))
(70*(1-70))/(150)
(85*(1-85))/(150)
sqrt(-32.2-47.6)
(85*(1-85))/(150)
abs((85*(1-85))/(150))
sqrt(32.2+47.6)
(0.85*(1-0.85))/(150)
sqrt(((0.70*(1-0.70))/150) + ((0.85*(1-0.85))/150))
0.15/0.047
3.162-1.960
pnorm(-1.202)
1 - pnorm(-1.202)
power.prop.test(n = 150, p1 = 0.70, p2 = 0.85)
power.prop.test( p1 = 0.60, p2 = 0.75)
power.prop.test( p1 = 0.60, p2 = 0.75, power = 0.80)
3.3524/0.0225
(1.96+0.84)^2
1.96^2+0.84^2
7.84*(0.60*0.40+0.75*0.25)
0.15^2
3.3516/0.025
3.3516/0.0225
3.3524/0.0225
qnorm(0.90)
sqrt(((0.40*(1-0.40))/100) + ((0.55*(1-0.55))/100))
qnorm(0.05)
qnorm(0.05, lower.tail = TRUE)
qnorm(0.025, lower.tail = TRUE)
qnorm(0.025, lower.tail = FALSE)
pt(-0.58, 58)
0.15/0.0698
1.96-2.148
pnorm(-0.188, lower.tail = FALSE)
pnorm(-0.188)
1-0.4254383
3.841-0.8
library(pwr)
power.prop.test(n = 10, p1 = 40, p2 = 55)
power.prop.test(n = 100, p1 = 40, p2 = 55)
power.prop.test(n = 100, p1 = 0.40, p2 = 0.55)
power.prop.test(n = 10, p1 = 0.40, p2 = 0.55)
install.packages("pwr")
pwr::pwr.chisq.test(w = 0.15, N = 20, df = 1)
pwr::pwr.chisq.test(w = 0.15, N = 10, df = 1)
qchisq(0.95, df = 1)
# Création du tableau de contingence
observed <- matrix(c(4, 6, 6, 4), nrow = 2, byrow = TRUE)
# Nommer les dimensions pour la clarté
dimnames(observed) <- list(supplement = c("A", "B"),
outcome = c("Success", "Failure"))
# Effectuer le test du chi-carré
test_result <- chisq.test(observed, correct = FALSE)  # 'correct = FALSE' pour désactiver la correction de Yates
# Afficher les résultats
print(test_result)
library(pwr)
# Exemple de calcul de puissance pour un test du chi-carré
effect_size <- ES.w1(w1 = observed[1,1]/sum(observed[1,]), w2 = observed[2,1]/sum(observed[2,]))
# Exemple de calcul de puissance pour un test du chi-carré
effect_size <- ES.w1(P0 = observed[1,1]/sum(observed[1,]), P1 = observed[2,1]/sum(observed[2,]))
power_analysis <- pwr.chisq.test(w = effect_size, N = sum(observed), df = 1, sig.level = 0.05)
# Afficher l'analyse de puissance
print(power_analysis)
# Pour le test du chi-carré
chi2_value <- test_result$statistic
p_value <- test_result$p.value
chi2_critical <- qchisq(0.95, df = 1)  # Obtention de la valeur critique
# Pour l'analyse de puissance
calculated_power <- power_analysis$power
3.84-0.8
pchisq(3.04, df = 1)
1 - pchisq(3.04, df = 1)
1 - pchisq(3.04, df = 1, lower.tail = FALSE)
(6.5+7)/2
Sys.getenv("GITHUB_PAT")
